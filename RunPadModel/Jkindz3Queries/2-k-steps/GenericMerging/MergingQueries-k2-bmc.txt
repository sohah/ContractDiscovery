(set-option :produce-unsat-cores true)
(declare-fun r347.launchBtn.1.9.4 () Int)
(declare-fun r347.launchBtn.1.13.4 () Int)
(declare-fun r347.launchBtn.1.7.4 () Int)
(declare-fun r347.launchBtn.1.15.4 () Int)
(declare-fun w12$3 () Int)
(declare-fun w13$2 () Int)
(declare-fun w11$2 () Int)
(declare-fun r347.launchBtn.1.11.4 () Int)
(declare-fun w11$1 () Int)
(declare-fun w14$2 () Int)
(declare-fun r347.ignition.1.3.4 () Int)
(declare-fun r347.startBtn.1.5.4 () Int)
(declare-fun r347.ignition.1.5.4 () Int)
(declare-fun r347.startBtn.1.7.4 () Int)
(declare-fun r347.startBtn.1.3.4 () Int)
(declare-fun r347.launchBtn.1.5.4 () Int)
(declare-fun r347.ignition.1.7.4 () Int)
(declare-fun ignition () Int)
(declare-fun signal () Int)
(declare-fun r347.startBtn.1.9.4 () Int)
(declare-fun r347.launchBtn.1.3.4 () Int)
(declare-fun startBtn () Int)
(declare-fun launchBtn () Int)
(declare-fun r347.startBtn.1.11.4 () Int)
(declare-fun r347.startBtn.1.13.4 () Int)
(declare-fun symVar () Int)
(assert (>= startBtn 0))
(assert (<= startBtn 1))
(assert (>= launchBtn 0))
(assert (<= launchBtn 1))
(assert (>= ignition 0))
(assert (<= ignition 1))
(assert (>= symVar 0))
(assert (<= symVar 1))
(assert (let ((a!1 (and (= startBtn 0) (= launchBtn 0) (= ignition 0)))
      (a!2 (and (and (not (= startBtn 0)) (= launchBtn 0)) (= ignition 0)))
      (a!3 (and (not (= startBtn 0)) (not (= launchBtn 0)) (= ignition 0)))
      (a!8 (and (= 0 0) (not (not (= signal 0))) (= w11$2 1)))
      (a!10 (and (= 0 0) (not (not (= signal 1))) (= w13$2 1)))
      (a!12 (or (not (= w11$2 0)) (and (= w11$2 0) (not (= w13$2 0)))))
      (a!13 (and (= 0 0)
                 (not (not (= w13$2 0)))
                 (= r347.launchBtn.1.3.4 launchBtn)))
      (a!15 (or (and (= 0 0)
                     (= w12$3 2)
                     (= r347.launchBtn.1.5.4 r347.launchBtn.1.3.4))
                (and (= 0 0)
                     (not (= w12$3 2))
                     (= r347.launchBtn.1.5.4 launchBtn))))
      (a!16 (and (= 0 0)
                 (not (not (= w11$2 0)))
                 (= r347.startBtn.1.3.4 startBtn)))
      (a!18 (and (and (= 0 0) (not (= w12$3 1)))
                 (= r347.launchBtn.1.7.4 r347.launchBtn.1.5.4)))
      (a!19 (and (= 0 0) (not (not (= w12$3 1)))))
      (a!20 (and (and (= 0 0) (not (= w12$3 1)))
                 (= r347.startBtn.1.5.4 startBtn)))
      (a!21 (and (and (= 0 0) (not (= w14$2 0)))
                 (= r347.startBtn.1.7.4 r347.startBtn.1.5.4)))
      (a!22 (and (= 0 0) (not (not (= w14$2 0)))))
      (a!23 (and (and (= 0 0) (not (= w14$2 0)))
                 (= r347.launchBtn.1.9.4 r347.launchBtn.1.7.4)))
      (a!24 (and (= 0 0) (and (not (= w12$3 4)) (not (= w12$3 5)))))
      (a!25 (not (and (not (= w12$3 4)) (not (= w12$3 5)))))
      (a!29 (and (and (= 0 0) (not (= w12$3 3)))
                 (= r347.ignition.1.5.4 r347.ignition.1.3.4)))
      (a!30 (and (= 0 0) (not (not (= w12$3 3)))))
      (a!31 (and (and (= 0 0) (not (= w12$3 3)))
                 (= r347.startBtn.1.11.4 r347.startBtn.1.9.4)))
      (a!32 (and (and (= 0 0) (not (= w12$3 3)))
                 (= r347.launchBtn.1.13.4 r347.launchBtn.1.11.4)))
      (a!33 (and (and (= 0 0) (not (= symVar 0)))
                 (= r347.ignition.1.7.4 r347.ignition.1.5.4)))
      (a!34 (and (= 0 0) (not (not (= symVar 0)))))
      (a!35 (and (and (= 0 0) (not (= symVar 0)))
                 (= r347.startBtn.1.13.4 r347.startBtn.1.11.4)))
      (a!36 (and (and (= 0 0) (not (= symVar 0)))
                 (= r347.launchBtn.1.15.4 r347.launchBtn.1.13.4)))
      (a!37 (and (and (= 0 0) (not (= symVar 0)))
                 (= w11$1 r347.ignition.1.5.4))))
(let ((a!4 (and (and (and (= 0 0) (not a!1)) (not a!2)) a!3 (= w12$3 3)))
      (a!5 (and (and (and (= 0 0) (not a!1)) (not a!2)) (not a!3)))
      (a!6 (or (= startBtn 0) (and (not (= startBtn 0)) (= launchBtn 0)) a!3))
      (a!9 (or (and (= 0 0) (not (= signal 0)) (= w11$2 0)) a!8))
      (a!11 (or (and (= 0 0) (not (= signal 1)) (= w13$2 0)) a!10))
      (a!14 (or (and (= 0 0) (not (= w13$2 0)) (= r347.launchBtn.1.3.4 1))
                a!13))
      (a!17 (or (and (= 0 0) (not (= w11$2 0)) (= r347.startBtn.1.3.4 1))
                a!16))
      (a!26 (or (and a!24 (= r347.startBtn.1.9.4 r347.startBtn.1.7.4))
                (and (and (= 0 0) a!25) (= r347.startBtn.1.9.4 0))))
      (a!27 (or (and a!24 (= r347.launchBtn.1.11.4 r347.launchBtn.1.9.4))
                (and (and (= 0 0) a!25) (= r347.launchBtn.1.11.4 0))))
      (a!28 (or (and a!24 (= r347.ignition.1.3.4 ignition))
                (and (and (= 0 0) a!25) (= r347.ignition.1.3.4 0)))))
(let ((a!7 (or (and (= 0 0) a!1 (= w12$3 1))
               (and (and (= 0 0) (not a!1)) a!2 (= w12$3 2))
               a!4
               (and a!5 a!6 (= w12$3 5))
               (and a!5 (not a!6) (= w12$3 4)))))
  (and a!7
       a!9
       a!11
       (or (and (= 0 0) a!12 (= w14$2 1))
           (and (= 0 0) (not a!12) (= w14$2 0)))
       a!14
       a!15
       a!17
       (or a!18 (and a!19 (= r347.launchBtn.1.7.4 launchBtn)))
       (or a!20 (and a!19 (= r347.startBtn.1.5.4 r347.startBtn.1.3.4)))
       (or a!21 (and a!22 (= r347.startBtn.1.7.4 startBtn)))
       (or a!23 (and a!22 (= r347.launchBtn.1.9.4 launchBtn)))
       a!26
       a!27
       a!28
       (or a!29 (and a!30 (= r347.ignition.1.5.4 1)))
       (or a!31 (and a!30 (= r347.startBtn.1.11.4 startBtn)))
       (or a!32 (and a!30 (= r347.launchBtn.1.13.4 launchBtn)))
       (or a!33 (and a!34 (= r347.ignition.1.7.4 ignition)))
       (or a!35 (and a!34 (= r347.startBtn.1.13.4 startBtn)))
       (or a!36 (and a!34 (= r347.launchBtn.1.15.4 launchBtn)))
       (or a!37 (and a!34 (= w11$1 0))))))))


;----------------- jkind query starts here -------------------

(define-fun T ((%init Bool)
  ($sig$0 Int) ($ignition$0 Bool) ($reset_flag$0 Bool) ($p1$0 Bool)
  ($start_bt_val~0.start_bt$0 Bool) ($start_bt_val~0.launch_bt$0 Bool) ($start_bt_val~0.reset_flag$0 Bool) ($start_bt_val~0.start_bt_out$0 Bool)
  ($launch_bt_val~0.start_bt$0 Bool) ($launch_bt_val~0.launch_bt$0 Bool) ($launch_bt_val~0.reset_flag$0 Bool) ($launch_bt_val~0.launch_bt_out$0 Bool)

  ($sig$1 Int) ($ignition$1 Bool) ($reset_flag$1 Bool) ($p1$1 Bool)
  ($start_bt_val~0.start_bt$1 Bool) ($start_bt_val~0.launch_bt$1 Bool) ($start_bt_val~0.reset_flag$1 Bool) ($start_bt_val~0.start_bt_out$1 Bool)
  ($launch_bt_val~0.start_bt$1 Bool) ($launch_bt_val~0.launch_bt$1 Bool) ($launch_bt_val~0.reset_flag$1 Bool) ($launch_bt_val~0.launch_bt_out$1 Bool)) Bool

  (and
    (= $ignition$1 (ite %init false $launch_bt_val~0.launch_bt_out$0))
    (= $reset_flag$1 (ite %init false $ignition$0))
    (= $p1$1 (=> $launch_bt_val~0.launch_bt_out$1 $start_bt_val~0.start_bt_out$1))
    (= $start_bt_val~0.start_bt$1 (ite %init false $start_bt_val~0.start_bt_out$0))
    (= $start_bt_val~0.launch_bt$1 (ite %init false $launch_bt_val~0.launch_bt_out$0))
    (= $start_bt_val~0.reset_flag$1 (ite %init false $reset_flag$0))

    (= $start_bt_val~0.start_bt_out$1 (ite %init false (ite $start_bt_val~0.reset_flag$1 false (ite (and (and (not $start_bt_val~0.start_bt$0) (not $start_bt_val~0.launch_bt$0)) (= $sig$1 0)) true $start_bt_val~0.start_bt$0))))
    (= $launch_bt_val~0.start_bt$1 (ite %init false $start_bt_val~0.start_bt_out$0))
    (= $launch_bt_val~0.launch_bt$1 (ite %init false $launch_bt_val~0.launch_bt_out$0))
    (= $launch_bt_val~0.reset_flag$1 (ite %init false $reset_flag$0))
    (= $launch_bt_val~0.launch_bt_out$1 (ite %init false (ite $launch_bt_val~0.reset_flag$1 false (ite (and (and $launch_bt_val~0.start_bt$0 (not $launch_bt_val~0.launch_bt$0)) (= $sig$1 1)) true $launch_bt_val~0.launch_bt$0))))))

(declare-fun %init () Bool)
(declare-fun $sig$~1 () Int)
(declare-fun $ignition$~1 () Bool)
(declare-fun $reset_flag$~1 () Bool)
(declare-fun $p1$~1 () Bool)
(declare-fun $start_bt_val~0.start_bt$~1 () Bool)
(declare-fun $start_bt_val~0.launch_bt$~1 () Bool)
(declare-fun $start_bt_val~0.reset_flag$~1 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$~1 () Bool)
(declare-fun $launch_bt_val~0.start_bt$~1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$~1 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$~1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$~1 () Bool)
(assert (and (<= 0 $sig$~1) (<= $sig$~1 2)))
; K = 0
(declare-fun $sig$0 () Int)
(declare-fun $ignition$0 () Bool)
(declare-fun $reset_flag$0 () Bool)
(declare-fun $p1$0 () Bool)
(declare-fun $start_bt_val~0.start_bt$0 () Bool)
(declare-fun $start_bt_val~0.launch_bt$0 () Bool)
(declare-fun $start_bt_val~0.reset_flag$0 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$0 () Bool)
(declare-fun $launch_bt_val~0.start_bt$0 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$0 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$0 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$0 () Bool)

(assert (and (<= 0 $sig$0) (<= $sig$0 2)))


(assert (T true
  $sig$~1 $ignition$~1 $reset_flag$~1 $p1$~1
  $start_bt_val~0.start_bt$~1 $start_bt_val~0.launch_bt$~1 $start_bt_val~0.reset_flag$~1 $start_bt_val~0.start_bt_out$~1
  $launch_bt_val~0.start_bt$~1 $launch_bt_val~0.launch_bt$~1 $launch_bt_val~0.reset_flag$~1 $launch_bt_val~0.launch_bt_out$~1

  $sig$0 $ignition$0 $reset_flag$0 $p1$0
  $start_bt_val~0.start_bt$0 $start_bt_val~0.launch_bt$0 $start_bt_val~0.reset_flag$0 $start_bt_val~0.start_bt_out$0
  $launch_bt_val~0.start_bt$0 $launch_bt_val~0.launch_bt$0 $launch_bt_val~0.reset_flag$0 $launch_bt_val~0.launch_bt_out$0))

(assert true)
;(declare-fun act1 () Bool)
;(assert (=> act1 (not (=> true $p1$0))))

; K = 1
(declare-fun $sig$1 () Int)
(declare-fun $ignition$1 () Bool)
(declare-fun $reset_flag$1 () Bool)
(declare-fun $p1$1 () Bool)
(declare-fun $start_bt_val~0.start_bt$1 () Bool)
(declare-fun $start_bt_val~0.launch_bt$1 () Bool)
(declare-fun $start_bt_val~0.reset_flag$1 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$1 () Bool)
(declare-fun $launch_bt_val~0.start_bt$1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$1 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$1 () Bool)

(assert (and (<= 0 $sig$1) (<= $sig$1 2)))

(assert (T false
  $sig$0 $ignition$0 $reset_flag$0 $p1$0
  $start_bt_val~0.start_bt$0 $start_bt_val~0.launch_bt$0 $start_bt_val~0.reset_flag$0 $start_bt_val~0.start_bt_out$0
  $launch_bt_val~0.start_bt$0 $launch_bt_val~0.launch_bt$0 $launch_bt_val~0.reset_flag$0 $launch_bt_val~0.launch_bt_out$0

  $sig$1 $ignition$1 $reset_flag$1 $p1$1
  $start_bt_val~0.start_bt$1 $start_bt_val~0.launch_bt$1 $start_bt_val~0.reset_flag$1 $start_bt_val~0.start_bt_out$1
  $launch_bt_val~0.start_bt$1 $launch_bt_val~0.launch_bt$1 $launch_bt_val~0.reset_flag$1 $launch_bt_val~0.launch_bt_out$1))

(declare-fun act2 () Bool)
(assert (=> act2 (not $p1$1)))

;(check-sat act2)


; K = 2
(declare-fun $sig$2 () Int)
(declare-fun $ignition$2 () Bool)
(declare-fun $reset_flag$2 () Bool)
(declare-fun $p1$2 () Bool)
(declare-fun $start_bt_val~0.start_bt$2 () Bool)
(declare-fun $start_bt_val~0.launch_bt$2 () Bool)
(declare-fun $start_bt_val~0.reset_flag$2 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$2 () Bool)
(declare-fun $launch_bt_val~0.start_bt$2 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$2 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$2 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$2 () Bool)

(assert (and (<= 0 $sig$2) (<= $sig$2 2)))

(assert (T false
  $sig$1 $ignition$1 $reset_flag$1 $p1$1
  $start_bt_val~0.start_bt$1 $start_bt_val~0.launch_bt$1 $start_bt_val~0.reset_flag$1 $start_bt_val~0.start_bt_out$1
  $launch_bt_val~0.start_bt$1 $launch_bt_val~0.launch_bt$1 $launch_bt_val~0.reset_flag$1 $launch_bt_val~0.launch_bt_out$1

  $sig$2 $ignition$2 $reset_flag$2 $p1$2
  $start_bt_val~0.start_bt$2 $start_bt_val~0.launch_bt$2 $start_bt_val~0.reset_flag$2 $start_bt_val~0.start_bt_out$2
  $launch_bt_val~0.start_bt$2 $launch_bt_val~0.launch_bt$2 $launch_bt_val~0.reset_flag$2 $launch_bt_val~0.launch_bt_out$2))

  ; ---------- joining Input begins here -------------
  (assert(and
    (= $sig$1 signal)
    (= $sig$2 signal)
    (= $ignition$1 (= ignition 1))
    (= $start_bt_val~0.start_bt$1 (= startBtn 1))
    (= $launch_bt_val~0.start_bt$1 (= startBtn 1))
    (= $start_bt_val~0.launch_bt$1 (= launchBtn 1))
    (= $launch_bt_val~0.launch_bt$1 (= launchBtn 1))
    (= $start_bt_val~0.start_bt_out$1 (= startBtn 1))
    (= $launch_bt_val~0.launch_bt_out$1 (= launchBtn 1))
    (= symVar 1))
    )

  ; ---------- joining Input ends here -------------

; ---------- joining output begins here -------------
(declare-fun out1 () Bool)
(declare-fun out2 () Bool)
(declare-fun out3 () Bool)

(assert (=> out1
    (= $ignition$2 (not (= r347.ignition.1.5.4 1)))))

(assert (=> out2
    (= $start_bt_val~0.start_bt_out$2 (not (= r347.startBtn.1.11.4 1)))))

(assert (=> out3
    (= $launch_bt_val~0.launch_bt_out$2 (not (= r347.launchBtn.1.13.4 1)))))

; ---------- joining output ends here -------------
(check-sat out1)
(get-unsat-core)
(get-model)

(check-sat out2)
(get-unsat-core)
;(get-model)

(check-sat out3)
(get-unsat-core)
(exit)
