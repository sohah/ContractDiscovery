objc[59785]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/bin/java (0x10da144c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10ea7f4e0). One of the two will be used. Which one is undefined.
(and(= $start_bt$1(ite %init false (ite $reset_flag$0 false (ite(and(and(not $start_bt$0)(not $launch_bt$0))(= $sig$1 1)) true  $start_bt$0))))(= $launch_bt$1(ite %init false (ite $reset_flag$0 false (ite(and(and $start_bt$0(not $launch_bt$0))(= $sig$1 1)) true  $launch_bt$0))))(= $ignition$1(ite %init false (and $launch_bt$0(and(not $ignition$0)(not $reset_flag$0)))))(= $reset_flag$1(ite %init false (and $ignition$0(not $reset_flag$0))))(= $p1$1 $H~0.out$1)(= $H~0.in$1(=> $reset_flag$1 $Y~0.out$1))(= $H~0.out$1(ite %init $H~0.in$1(and $H~0.in$1 $H~0.out$0)))(= $Y~0.out$1(ite %init false  $ignition$0)))
|-|-|-|-|-|-|-|- checking SAT |-|-|-|-|-|-|-|-

Contract and Implementation not matching, collecting counter example and repairing
**************** Checking SAT for holeContract:
(declare-fun constHole_1 () Bool)
(declare-fun constHole_2 () Bool)
(declare-fun constHole_3 () Int)
(declare-fun constHole_4 () Bool)
(declare-fun constHole_5 () Bool)
(declare-fun constHole_6 () Bool)
(declare-fun constHole_7 () Int)
(declare-fun constHole_8 () Bool)
(declare-fun constHole_9 () Bool)
(declare-fun constHole_10 () Bool)
(declare-fun constHole_11 () Bool)

(define-fun T (( %init Bool)( $sig$0 Int)( $ignition$0 Bool)( $start_bt$0 Bool)( $launch_bt$0 Bool)( $reset_flag$0 Bool)( $p1$0 Bool)( $H~0.in$0 Bool)( $H~0.out$0 Bool)( $Y~0.out$0 Bool)( $sig$1 Int)( $ignition$1 Bool)( $start_bt$1 Bool)( $launch_bt$1 Bool)( $reset_flag$1 Bool)( $p1$1 Bool)( $H~0.in$1 Bool)( $H~0.out$1 Bool)( $Y~0.out$1 Bool)) Bool
(and(= $start_bt$1(ite %init  constHole_1 (ite $reset_flag$0  constHole_2 (ite(and(and(not $start_bt$0)(not $launch_bt$0))(= $sig$1  constHole_3 ))  constHole_4  $start_bt$0))))(= $launch_bt$1(ite %init  constHole_5 (ite $reset_flag$0  constHole_6 (ite(and(and $start_bt$0(not $launch_bt$0))(= $sig$1  constHole_7 ))  constHole_8  $launch_bt$0))))(= $ignition$1(ite %init  constHole_9 (and $launch_bt$0(and(not $ignition$0)(not $reset_flag$0)))))(= $reset_flag$1(ite %init  constHole_10 (and $ignition$0(not $reset_flag$0))))(= $p1$1 $H~0.out$1)(= $H~0.in$1(=> $reset_flag$1 $Y~0.out$1))(= $H~0.out$1(ite %init $H~0.in$1(and $H~0.in$1 $H~0.out$0)))(= $Y~0.out$1(ite %init  constHole_11  $ignition$0))))

|-|-|-|-|-|-|-|- checking SAT |-|-|-|-|-|-|-|-

SAT: synthesis for a possible repair is found
printing model for step number : 1
(define-fun r347.launch_btn.1.3.4$r1 () Int
  1)
(define-fun constHole_6 () Bool
  false)
(define-fun r347.start_btn.1.5.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.11.4$r0 () Int
  1)
(define-fun r347.start_btn.1.11.4$r0 () Int
  1)
(define-fun r347.ignition_r.1.5.4$r0 () Int
  1)
(define-fun w12$2$r1 () Int
  0)
(define-fun constHole_7 () Int
  2)
(define-fun r347.launch_btn.1.9.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.13.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.15.4$r0 () Int
  1)
(define-fun constHole_8 () Bool
  false)
(define-fun constHole_3 () Int
  2)
(define-fun r347.start_btn.1.3.4$r0 () Int
  1)
(define-fun w13$2$r0 () Int
  0)
(define-fun constHole_9 () Bool
  false)
(define-fun constHole_11 () Bool
  false)
(define-fun r347.reset_btn.1.5.4$r0 () Int
  0)
(define-fun w14$2$r1 () Int
  1)
(define-fun r347.start_btn.1.9.4$r1 () Int
  1)
(define-fun constHole_2 () Bool
  false)
(define-fun r347.launch_btn.1.11.4$r1 () Int
  1)
(define-fun r347.ignition_r.1.5.4$r1 () Int
  0)
(define-fun constHole_1 () Bool
  false)
(define-fun ignition$r0 () Int
  0)
(define-fun reset_btn$r0 () Int
  0)
(define-fun r347.launch_btn.1.15.4$r1 () Int
  1)
(define-fun r347.ignition_r.1.4.4$r1 () Int
  0)
(define-fun w14$3$r0 () Int
  3)
(define-fun w13$2$r1 () Int
  1)
(define-fun r347.start_btn.1.9.4$r0 () Int
  1)
(define-fun r347.launch_btn.1.9.4$r0 () Int
  1)
(define-fun $sig$~1 () Int
  0)
(define-fun w12$2$r0 () Int
  0)
(define-fun r347.reset_btn.1.5.4$r1 () Int
  1)
(define-fun r347.reset_btn.1.7.4$r1 () Int
  1)
(define-fun launch_btn$r0 () Int
  1)
(define-fun r347.start_btn.1.13.4$r1 () Int
  1)
(define-fun r347.start_btn.1.11.4$r1 () Int
  1)
(define-fun r347.start_btn.1.7.4$r1 () Int
  1)
(define-fun r347.ignition_r.1.4.4$r0 () Int
  0)
(define-fun w14$2$r0 () Int
  0)
(define-fun r347.launch_btn.1.5.4$r1 () Int
  1)
(define-fun constHole_10 () Bool
  false)
(define-fun r347.start_btn.1.3.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.3.4$r0 () Int
  1)
(define-fun r347.start_btn.1.5.4$r0 () Int
  1)
(define-fun w14$3$r1 () Int
  4)
(define-fun %init () Bool
  false)
(define-fun start_btn$r0 () Int
  1)
(define-fun r347.reset_btn.1.4.4$r0 () Int
  0)
(define-fun r347.start_btn.1.13.4$r0 () Int
  1)
(define-fun r347.reset_btn.1.4.4$r1 () Int
  0)
(define-fun r347.launch_btn.1.7.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.13.4$r0 () Int
  1)
(define-fun signal$r1 () Int
  1)
(define-fun signal$r0 () Int
  2)
(define-fun r347.launch_btn.1.5.4$r0 () Int
  1)
(define-fun constHole_4 () Bool
  false)
(define-fun r347.start_btn.1.7.4$r0 () Int
  1)
(define-fun r347.reset_btn.1.7.4$r0 () Int
  0)
(define-fun constHole_5 () Bool
  false)
(define-fun r347.launch_btn.1.7.4$r0 () Int
  1)
(define-fun $H~0.out$~1 () Bool
  true)
(define-fun contract_match$ () Bool
  true)
(define-fun w12$1$r1 () Int
  0)
(define-fun r347.reset_btn.1.9.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.17.4$r1 () Int
  1)
(define-fun r347.start_btn.1.15.4$r1 () Int
  1)
(define-fun r347.ignition_r.1.7.4$r1 () Int
  0)
(define-fun w12$1$r0 () Int
  1)
(define-fun r347.reset_btn.1.9.4$r0 () Int
  0)
(define-fun r347.launch_btn.1.17.4$r0 () Int
  1)
(define-fun r347.start_btn.1.15.4$r0 () Int
  1)
(define-fun r347.ignition_r.1.7.4$r0 () Int
  1)
(define-fun $p1$1 () Bool
  true)
(define-fun $p1$0 () Bool
  true)
(define-fun act2 () Bool
  false)
(define-fun $Y~0.out$1 () Bool
  true)
(define-fun $H~0.in$1 () Bool
  true)
(define-fun $H~0.out$1 () Bool
  true)
(define-fun $reset_flag$1 () Bool
  true)
(define-fun $ignition$1 () Bool
  false)
(define-fun $launch_bt$1 () Bool
  true)
(define-fun $start_bt$1 () Bool
  true)
(define-fun $sig$1 () Int
  1)
(define-fun act1 () Bool
  false)
(define-fun $H~0.in$0 () Bool
  true)
(define-fun $Y~0.out$0 () Bool
  false)
(define-fun $H~0.out$0 () Bool
  true)
(define-fun $reset_flag$0 () Bool
  false)
(define-fun $ignition$0 () Bool
  true)
(define-fun $ignition$~1 () Bool
  false)
(define-fun $launch_bt$0 () Bool
  true)
(define-fun $start_bt$0 () Bool
  true)
(define-fun $sig$0 () Int
  2)
(define-fun $launch_bt$~1 () Bool
  true)
(define-fun $start_bt$~1 () Bool
  true)
(define-fun $reset_flag$~1 () Bool
  false)
repair for (hole, original value) = new value:
        (  constHole_1 , false )  =   false 
        (  constHole_2 , false )  =   false 
        (  constHole_3 , 1)  =   2
        (  constHole_4 , true )  =   false 
        (  constHole_5 , false )  =   false 
        (  constHole_6 , false )  =   false 
        (  constHole_7 , 1)  =   2
        (  constHole_8 , true )  =   false 
        (  constHole_9 , false )  =   false 
        (  constHole_10 , false )  =   false 
        (  constHole_11 , false )  =   false 
*************** Checking SAT for the repaired Contract T': 

(define-fun T (( %init Bool)( $sig$0 Int)( $ignition$0 Bool)( $start_bt$0 Bool)( $launch_bt$0 Bool)( $reset_flag$0 Bool)( $p1$0 Bool)( $H~0.in$0 Bool)( $H~0.out$0 Bool)( $Y~0.out$0 Bool)( $sig$1 Int)( $ignition$1 Bool)( $start_bt$1 Bool)( $launch_bt$1 Bool)( $reset_flag$1 Bool)( $p1$1 Bool)( $H~0.in$1 Bool)( $H~0.out$1 Bool)( $Y~0.out$1 Bool)) Bool
(and(= $start_bt$1(ite %init false (ite $reset_flag$0 false (ite(and(and(not $start_bt$0)(not $launch_bt$0))(= $sig$1 2)) false  $start_bt$0))))(= $launch_bt$1(ite %init false (ite $reset_flag$0 false (ite(and(and $start_bt$0(not $launch_bt$0))(= $sig$1 2)) false  $launch_bt$0))))(= $ignition$1(ite %init false (and $launch_bt$0(and(not $ignition$0)(not $reset_flag$0)))))(= $reset_flag$1(ite %init false (and $ignition$0(not $reset_flag$0))))(= $p1$1 $H~0.out$1)(= $H~0.in$1(=> $reset_flag$1 $Y~0.out$1))(= $H~0.out$1(ite %init $H~0.in$1(and $H~0.in$1 $H~0.out$0)))(= $Y~0.out$1(ite %init false  $ignition$0))))

|-|-|-|-|-|-|-|- checking SAT |-|-|-|-|-|-|-|-

SAT: repair is no good, collecting counter example
**************** Checking SAT for holeContract:
(declare-fun constHole_1 () Bool)
(declare-fun constHole_2 () Bool)
(declare-fun constHole_3 () Int)
(declare-fun constHole_4 () Bool)
(declare-fun constHole_5 () Bool)
(declare-fun constHole_6 () Bool)
(declare-fun constHole_7 () Int)
(declare-fun constHole_8 () Bool)
(declare-fun constHole_9 () Bool)
(declare-fun constHole_10 () Bool)
(declare-fun constHole_11 () Bool)

(define-fun T (( %init Bool)( $sig$0 Int)( $ignition$0 Bool)( $start_bt$0 Bool)( $launch_bt$0 Bool)( $reset_flag$0 Bool)( $p1$0 Bool)( $H~0.in$0 Bool)( $H~0.out$0 Bool)( $Y~0.out$0 Bool)( $sig$1 Int)( $ignition$1 Bool)( $start_bt$1 Bool)( $launch_bt$1 Bool)( $reset_flag$1 Bool)( $p1$1 Bool)( $H~0.in$1 Bool)( $H~0.out$1 Bool)( $Y~0.out$1 Bool)) Bool
(and(= $start_bt$1(ite %init  constHole_1 (ite $reset_flag$0  constHole_2 (ite(and(and(not $start_bt$0)(not $launch_bt$0))(= $sig$1  constHole_3 ))  constHole_4  $start_bt$0))))(= $launch_bt$1(ite %init  constHole_5 (ite $reset_flag$0  constHole_6 (ite(and(and $start_bt$0(not $launch_bt$0))(= $sig$1  constHole_7 ))  constHole_8  $launch_bt$0))))(= $ignition$1(ite %init  constHole_9 (and $launch_bt$0(and(not $ignition$0)(not $reset_flag$0)))))(= $reset_flag$1(ite %init  constHole_10 (and $ignition$0(not $reset_flag$0))))(= $p1$1 $H~0.out$1)(= $H~0.in$1(=> $reset_flag$1 $Y~0.out$1))(= $H~0.out$1(ite %init $H~0.in$1(and $H~0.in$1 $H~0.out$0)))(= $Y~0.out$1(ite %init  constHole_11  $ignition$0))))

|-|-|-|-|-|-|-|- checking SAT |-|-|-|-|-|-|-|-

SAT: synthesis for a possible repair is found
printing model for step number : 2
(define-fun r347.launch_btn.1.3.4$r1 () Int
  1)
(define-fun constHole_6 () Bool
  false)
(define-fun r347.start_btn.1.5.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.11.4$r0 () Int
  1)
(define-fun r347.start_btn.1.11.4$r0 () Int
  1)
(define-fun r347.ignition_r.1.5.4$r0 () Int
  0)
(define-fun w12$2$r1 () Int
  0)
(define-fun constHole_7 () Int
  (- 1))
(define-fun r347.launch_btn.1.9.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.13.4$r1 () Int
  0)
(define-fun r347.launch_btn.1.15.4$r0 () Int
  1)
(define-fun constHole_8 () Bool
  false)
(define-fun constHole_3 () Int
  (- 1))
(define-fun r347.start_btn.1.3.4$r0 () Int
  1)
(define-fun w13$2$r0 () Int
  0)
(define-fun constHole_9 () Bool
  false)
(define-fun constHole_11 () Bool
  false)
(define-fun r347.reset_btn.1.5.4$r0 () Int
  1)
(define-fun w14$2$r1 () Int
  1)
(define-fun r347.start_btn.1.9.4$r1 () Int
  0)
(define-fun constHole_2 () Bool
  false)
(define-fun r347.launch_btn.1.11.4$r1 () Int
  0)
(define-fun r347.ignition_r.1.5.4$r1 () Int
  0)
(define-fun constHole_1 () Bool
  false)
(define-fun ignition$r0 () Int
  1)
(define-fun reset_btn$r0 () Int
  0)
(define-fun r347.launch_btn.1.15.4$r1 () Int
  0)
(define-fun r347.ignition_r.1.4.4$r1 () Int
  0)
(define-fun w14$3$r0 () Int
  4)
(define-fun w13$2$r1 () Int
  1)
(define-fun r347.start_btn.1.9.4$r0 () Int
  1)
(define-fun r347.launch_btn.1.9.4$r0 () Int
  1)
(define-fun $sig$~1 () Int
  0)
(define-fun w12$2$r0 () Int
  1)
(define-fun r347.reset_btn.1.5.4$r1 () Int
  0)
(define-fun r347.reset_btn.1.7.4$r1 () Int
  0)
(define-fun launch_btn$r0 () Int
  1)
(define-fun r347.start_btn.1.13.4$r1 () Int
  0)
(define-fun r347.start_btn.1.11.4$r1 () Int
  0)
(define-fun r347.start_btn.1.7.4$r1 () Int
  1)
(define-fun r347.ignition_r.1.4.4$r0 () Int
  0)
(define-fun w14$2$r0 () Int
  1)
(define-fun r347.launch_btn.1.5.4$r1 () Int
  1)
(define-fun constHole_10 () Bool
  false)
(define-fun r347.start_btn.1.3.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.3.4$r0 () Int
  1)
(define-fun r347.start_btn.1.5.4$r0 () Int
  1)
(define-fun w14$3$r1 () Int
  5)
(define-fun %init () Bool
  false)
(define-fun start_btn$r0 () Int
  1)
(define-fun r347.reset_btn.1.4.4$r0 () Int
  0)
(define-fun r347.start_btn.1.13.4$r0 () Int
  1)
(define-fun r347.reset_btn.1.4.4$r1 () Int
  0)
(define-fun r347.launch_btn.1.7.4$r1 () Int
  1)
(define-fun r347.launch_btn.1.13.4$r0 () Int
  1)
(define-fun signal$r1 () Int
  1)
(define-fun signal$r0 () Int
  0)
(define-fun r347.launch_btn.1.5.4$r0 () Int
  1)
(define-fun constHole_4 () Bool
  false)
(define-fun r347.start_btn.1.7.4$r0 () Int
  1)
(define-fun r347.reset_btn.1.7.4$r0 () Int
  1)
(define-fun constHole_5 () Bool
  false)
(define-fun r347.launch_btn.1.7.4$r0 () Int
  1)
(define-fun $H~0.out$~1 () Bool
  true)
(define-fun contract_match$ () Bool
  true)
(define-fun w12$1$r1 () Int
  0)
(define-fun r347.reset_btn.1.9.4$r1 () Int
  0)
(define-fun r347.launch_btn.1.17.4$r1 () Int
  0)
(define-fun r347.start_btn.1.15.4$r1 () Int
  0)
(define-fun r347.ignition_r.1.7.4$r1 () Int
  0)
(define-fun w12$1$r0 () Int
  0)
(define-fun r347.reset_btn.1.9.4$r0 () Int
  1)
(define-fun r347.launch_btn.1.17.4$r0 () Int
  1)
(define-fun r347.start_btn.1.15.4$r0 () Int
  1)
(define-fun r347.ignition_r.1.7.4$r0 () Int
  0)
(define-fun $p1$1 () Bool
  true)
(define-fun $p1$0 () Bool
  true)
(define-fun act2 () Bool
  false)
(define-fun $Y~0.out$1 () Bool
  false)
(define-fun $H~0.in$1 () Bool
  true)
(define-fun $H~0.out$1 () Bool
  true)
(define-fun $reset_flag$1 () Bool
  false)
(define-fun $ignition$1 () Bool
  false)
(define-fun $launch_bt$1 () Bool
  false)
(define-fun $start_bt$1 () Bool
  false)
(define-fun $sig$1 () Int
  1)
(define-fun act1 () Bool
  false)
(define-fun $H~0.in$0 () Bool
  true)
(define-fun $Y~0.out$0 () Bool
  true)
(define-fun $H~0.out$0 () Bool
  true)
(define-fun $reset_flag$0 () Bool
  true)
(define-fun $ignition$0 () Bool
  false)
(define-fun $ignition$~1 () Bool
  true)
(define-fun $launch_bt$0 () Bool
  true)
(define-fun $start_bt$0 () Bool
  true)
(define-fun $sig$0 () Int
  0)
(define-fun $launch_bt$~1 () Bool
  true)
(define-fun $start_bt$~1 () Bool
  true)
(define-fun $reset_flag$~1 () Bool
  false)
repair for (hole, original value) = new value:
        (  constHole_1 , false )  =   false 
        (  constHole_2 , false )  =   false 
        (  constHole_3 , 1)  =   -1
        (  constHole_4 , true )  =   false 
        (  constHole_5 , false )  =   false 
        (  constHole_6 , false )  =   false 
        (  constHole_7 , 1)  =   -1
        (  constHole_8 , true )  =   false 
        (  constHole_9 , false )  =   false 
        (  constHole_10 , false )  =   false 
        (  constHole_11 , false )  =   false 
*************** Checking SAT for the repaired Contract T': 

(define-fun T (( %init Bool)( $sig$0 Int)( $ignition$0 Bool)( $start_bt$0 Bool)( $launch_bt$0 Bool)( $reset_flag$0 Bool)( $p1$0 Bool)( $H~0.in$0 Bool)( $H~0.out$0 Bool)( $Y~0.out$0 Bool)( $sig$1 Int)( $ignition$1 Bool)( $start_bt$1 Bool)( $launch_bt$1 Bool)( $reset_flag$1 Bool)( $p1$1 Bool)( $H~0.in$1 Bool)( $H~0.out$1 Bool)( $Y~0.out$1 Bool)) Bool
(and(= $start_bt$1(ite %init false (ite $reset_flag$0 false (ite(and(and(not $start_bt$0)(not $launch_bt$0))(= $sig$1 -1)) false  $start_bt$0))))(= $launch_bt$1(ite %init false (ite $reset_flag$0 false (ite(and(and $start_bt$0(not $launch_bt$0))(= $sig$1 -1)) false  $launch_bt$0))))(= $ignition$1(ite %init false (and $launch_bt$0(and(not $ignition$0)(not $reset_flag$0)))))(= $reset_flag$1(ite %init false (and $ignition$0(not $reset_flag$0))))(= $p1$1 $H~0.out$1)(= $H~0.in$1(=> $reset_flag$1 $Y~0.out$1))(= $H~0.out$1(ite %init $H~0.in$1(and $H~0.in$1 $H~0.out$0)))(= $Y~0.out$1(ite %init false  $ignition$0))))

|-|-|-|-|-|-|-|- checking SAT |-|-|-|-|-|-|-|-

SAT: repair is no good, collecting counter example
repeated counter example, that can't happen!
Exception in thread "main" java.lang.AssertionError
	at Transition.TransitionT.collectCounterExample(TransitionT.java:85)
	at Transition.CounterExampleFeedBack.executeConstantCEFL(CounterExampleFeedBack.java:92)
	at Main.main(Main.java:19)
