(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(define-fun T ((%init Bool) ($sig$0 Int) ($ignition$0 Bool) ($reset_flag$0 Bool) ($p1$0 Bool) ($start_bt_val~0.start_bt$0 Bool) ($start_bt_val~0.launch_bt$0 Bool) ($start_bt_val~0.reset_flag$0 Bool) ($start_bt_val~0.start_bt_out$0 Bool) ($launch_bt_val~0.start_bt$0 Bool) ($launch_bt_val~0.launch_bt$0 Bool) ($launch_bt_val~0.reset_flag$0 Bool) ($launch_bt_val~0.launch_bt_out$0 Bool) ($sig$1 Int) ($ignition$1 Bool) ($reset_flag$1 Bool) ($p1$1 Bool) ($start_bt_val~0.start_bt$1 Bool) ($start_bt_val~0.launch_bt$1 Bool) ($start_bt_val~0.reset_flag$1 Bool) ($start_bt_val~0.start_bt_out$1 Bool) ($launch_bt_val~0.start_bt$1 Bool) ($launch_bt_val~0.launch_bt$1 Bool) ($launch_bt_val~0.reset_flag$1 Bool) ($launch_bt_val~0.launch_bt_out$1 Bool)) Bool (and (= $ignition$1 (ite %init false (and $launch_bt_val~0.launch_bt_out$0 $launch_bt_val~0.launch_bt_out$1))) (= $reset_flag$1 (ite %init false $ignition$1)) (= $p1$1 (=> $launch_bt_val~0.launch_bt_out$1 $start_bt_val~0.start_bt_out$1)) (= $start_bt_val~0.start_bt$1 (ite %init false $start_bt_val~0.start_bt_out$0)) (= $start_bt_val~0.launch_bt$1 (ite %init false $launch_bt_val~0.launch_bt_out$0)) (= $start_bt_val~0.reset_flag$1 (ite %init false $reset_flag$0)) (= $start_bt_val~0.start_bt_out$1 (ite %init false (ite $start_bt_val~0.reset_flag$1 false (ite (and (and (not $start_bt_val~0.start_bt$0) (not $start_bt_val~0.launch_bt$0)) (= $sig$1 0)) true $start_bt_val~0.start_bt$0)))) (= $launch_bt_val~0.start_bt$1 (ite %init false $start_bt_val~0.start_bt_out$0)) (= $launch_bt_val~0.launch_bt$1 (ite %init false $launch_bt_val~0.launch_bt_out$0)) (= $launch_bt_val~0.reset_flag$1 (ite %init false $reset_flag$0)) (= $launch_bt_val~0.launch_bt_out$1 (ite %init false (ite $launch_bt_val~0.reset_flag$1 false (ite (and (and $launch_bt_val~0.start_bt$0 (not $launch_bt_val~0.launch_bt$0)) (= $sig$1 1)) true $launch_bt_val~0.launch_bt$0))))))
(declare-fun %init () Bool)
(declare-fun $sig$~1 () Int)
(declare-fun $ignition$~1 () Bool)
(declare-fun $reset_flag$~1 () Bool)
(declare-fun $p1$~1 () Bool)
(declare-fun $start_bt_val~0.start_bt$~1 () Bool)
(declare-fun $start_bt_val~0.launch_bt$~1 () Bool)
(declare-fun $start_bt_val~0.reset_flag$~1 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$~1 () Bool)
(declare-fun $launch_bt_val~0.start_bt$~1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$~1 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$~1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$~1 () Bool)
(assert (and (<= 0 $sig$~1) (<= $sig$~1 2)))
; K = 1
(declare-fun $sig$0 () Int)
(declare-fun $ignition$0 () Bool)
(declare-fun $reset_flag$0 () Bool)
(declare-fun $p1$0 () Bool)
(declare-fun $start_bt_val~0.start_bt$0 () Bool)
(declare-fun $start_bt_val~0.launch_bt$0 () Bool)
(declare-fun $start_bt_val~0.reset_flag$0 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$0 () Bool)
(declare-fun $launch_bt_val~0.start_bt$0 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$0 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$0 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$0 () Bool)
(assert (and (<= 0 $sig$0) (<= $sig$0 2)))
(assert (T true $sig$~1 $ignition$~1 $reset_flag$~1 $p1$~1 $start_bt_val~0.start_bt$~1 $start_bt_val~0.launch_bt$~1 $start_bt_val~0.reset_flag$~1 $start_bt_val~0.start_bt_out$~1 $launch_bt_val~0.start_bt$~1 $launch_bt_val~0.launch_bt$~1 $launch_bt_val~0.reset_flag$~1 $launch_bt_val~0.launch_bt_out$~1 $sig$0 $ignition$0 $reset_flag$0 $p1$0 $start_bt_val~0.start_bt$0 $start_bt_val~0.launch_bt$0 $start_bt_val~0.reset_flag$0 $start_bt_val~0.start_bt_out$0 $launch_bt_val~0.start_bt$0 $launch_bt_val~0.launch_bt$0 $launch_bt_val~0.reset_flag$0 $launch_bt_val~0.launch_bt_out$0))
(declare-fun act1 () Bool)
(assert (=> act1 (not $p1$0)))
(check-sat act1)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$0)
; K = 2
(declare-fun $sig$1 () Int)
(declare-fun $ignition$1 () Bool)
(declare-fun $reset_flag$1 () Bool)
(declare-fun $p1$1 () Bool)
(declare-fun $start_bt_val~0.start_bt$1 () Bool)
(declare-fun $start_bt_val~0.launch_bt$1 () Bool)
(declare-fun $start_bt_val~0.reset_flag$1 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$1 () Bool)
(declare-fun $launch_bt_val~0.start_bt$1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$1 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$1 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$1 () Bool)
(assert (and (<= 0 $sig$1) (<= $sig$1 2)))
(assert (T false $sig$0 $ignition$0 $reset_flag$0 $p1$0 $start_bt_val~0.start_bt$0 $start_bt_val~0.launch_bt$0 $start_bt_val~0.reset_flag$0 $start_bt_val~0.start_bt_out$0 $launch_bt_val~0.start_bt$0 $launch_bt_val~0.launch_bt$0 $launch_bt_val~0.reset_flag$0 $launch_bt_val~0.launch_bt_out$0 $sig$1 $ignition$1 $reset_flag$1 $p1$1 $start_bt_val~0.start_bt$1 $start_bt_val~0.launch_bt$1 $start_bt_val~0.reset_flag$1 $start_bt_val~0.start_bt_out$1 $launch_bt_val~0.start_bt$1 $launch_bt_val~0.launch_bt$1 $launch_bt_val~0.reset_flag$1 $launch_bt_val~0.launch_bt_out$1))
(declare-fun act2 () Bool)
(assert (=> act2 (not $p1$1)))
(check-sat act2)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$1)
; K = 3
(declare-fun $sig$2 () Int)
(declare-fun $ignition$2 () Bool)
(declare-fun $reset_flag$2 () Bool)
(declare-fun $p1$2 () Bool)
(declare-fun $start_bt_val~0.start_bt$2 () Bool)
(declare-fun $start_bt_val~0.launch_bt$2 () Bool)
(declare-fun $start_bt_val~0.reset_flag$2 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$2 () Bool)
(declare-fun $launch_bt_val~0.start_bt$2 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$2 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$2 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$2 () Bool)
(assert (and (<= 0 $sig$2) (<= $sig$2 2)))
(assert (T false $sig$1 $ignition$1 $reset_flag$1 $p1$1 $start_bt_val~0.start_bt$1 $start_bt_val~0.launch_bt$1 $start_bt_val~0.reset_flag$1 $start_bt_val~0.start_bt_out$1 $launch_bt_val~0.start_bt$1 $launch_bt_val~0.launch_bt$1 $launch_bt_val~0.reset_flag$1 $launch_bt_val~0.launch_bt_out$1 $sig$2 $ignition$2 $reset_flag$2 $p1$2 $start_bt_val~0.start_bt$2 $start_bt_val~0.launch_bt$2 $start_bt_val~0.reset_flag$2 $start_bt_val~0.start_bt_out$2 $launch_bt_val~0.start_bt$2 $launch_bt_val~0.launch_bt$2 $launch_bt_val~0.reset_flag$2 $launch_bt_val~0.launch_bt_out$2))
(declare-fun act3 () Bool)
(assert (=> act3 (not $p1$2)))
(check-sat act3)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$2)
; K = 4
(declare-fun $sig$3 () Int)
(declare-fun $ignition$3 () Bool)
(declare-fun $reset_flag$3 () Bool)
(declare-fun $p1$3 () Bool)
(declare-fun $start_bt_val~0.start_bt$3 () Bool)
(declare-fun $start_bt_val~0.launch_bt$3 () Bool)
(declare-fun $start_bt_val~0.reset_flag$3 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$3 () Bool)
(declare-fun $launch_bt_val~0.start_bt$3 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$3 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$3 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$3 () Bool)
(assert (and (<= 0 $sig$3) (<= $sig$3 2)))
(assert (T false $sig$2 $ignition$2 $reset_flag$2 $p1$2 $start_bt_val~0.start_bt$2 $start_bt_val~0.launch_bt$2 $start_bt_val~0.reset_flag$2 $start_bt_val~0.start_bt_out$2 $launch_bt_val~0.start_bt$2 $launch_bt_val~0.launch_bt$2 $launch_bt_val~0.reset_flag$2 $launch_bt_val~0.launch_bt_out$2 $sig$3 $ignition$3 $reset_flag$3 $p1$3 $start_bt_val~0.start_bt$3 $start_bt_val~0.launch_bt$3 $start_bt_val~0.reset_flag$3 $start_bt_val~0.start_bt_out$3 $launch_bt_val~0.start_bt$3 $launch_bt_val~0.launch_bt$3 $launch_bt_val~0.reset_flag$3 $launch_bt_val~0.launch_bt_out$3))
(declare-fun act4 () Bool)
(assert (=> act4 (not $p1$3)))
(check-sat act4)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$3)
; K = 5
(declare-fun $sig$4 () Int)
(declare-fun $ignition$4 () Bool)
(declare-fun $reset_flag$4 () Bool)
(declare-fun $p1$4 () Bool)
(declare-fun $start_bt_val~0.start_bt$4 () Bool)
(declare-fun $start_bt_val~0.launch_bt$4 () Bool)
(declare-fun $start_bt_val~0.reset_flag$4 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$4 () Bool)
(declare-fun $launch_bt_val~0.start_bt$4 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$4 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$4 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$4 () Bool)
(assert (and (<= 0 $sig$4) (<= $sig$4 2)))
(assert (T false $sig$3 $ignition$3 $reset_flag$3 $p1$3 $start_bt_val~0.start_bt$3 $start_bt_val~0.launch_bt$3 $start_bt_val~0.reset_flag$3 $start_bt_val~0.start_bt_out$3 $launch_bt_val~0.start_bt$3 $launch_bt_val~0.launch_bt$3 $launch_bt_val~0.reset_flag$3 $launch_bt_val~0.launch_bt_out$3 $sig$4 $ignition$4 $reset_flag$4 $p1$4 $start_bt_val~0.start_bt$4 $start_bt_val~0.launch_bt$4 $start_bt_val~0.reset_flag$4 $start_bt_val~0.start_bt_out$4 $launch_bt_val~0.start_bt$4 $launch_bt_val~0.launch_bt$4 $launch_bt_val~0.reset_flag$4 $launch_bt_val~0.launch_bt_out$4))
(declare-fun act5 () Bool)
(assert (=> act5 (not $p1$4)))
(check-sat act5)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$4)
; K = 6
(declare-fun $sig$5 () Int)
(declare-fun $ignition$5 () Bool)
(declare-fun $reset_flag$5 () Bool)
(declare-fun $p1$5 () Bool)
(declare-fun $start_bt_val~0.start_bt$5 () Bool)
(declare-fun $start_bt_val~0.launch_bt$5 () Bool)
(declare-fun $start_bt_val~0.reset_flag$5 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$5 () Bool)
(declare-fun $launch_bt_val~0.start_bt$5 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$5 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$5 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$5 () Bool)
(assert (and (<= 0 $sig$5) (<= $sig$5 2)))
(assert (T false $sig$4 $ignition$4 $reset_flag$4 $p1$4 $start_bt_val~0.start_bt$4 $start_bt_val~0.launch_bt$4 $start_bt_val~0.reset_flag$4 $start_bt_val~0.start_bt_out$4 $launch_bt_val~0.start_bt$4 $launch_bt_val~0.launch_bt$4 $launch_bt_val~0.reset_flag$4 $launch_bt_val~0.launch_bt_out$4 $sig$5 $ignition$5 $reset_flag$5 $p1$5 $start_bt_val~0.start_bt$5 $start_bt_val~0.launch_bt$5 $start_bt_val~0.reset_flag$5 $start_bt_val~0.start_bt_out$5 $launch_bt_val~0.start_bt$5 $launch_bt_val~0.launch_bt$5 $launch_bt_val~0.reset_flag$5 $launch_bt_val~0.launch_bt_out$5))
(declare-fun act6 () Bool)
(assert (=> act6 (not $p1$5)))
(check-sat act6)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$5)
; K = 7
(declare-fun $sig$6 () Int)
(declare-fun $ignition$6 () Bool)
(declare-fun $reset_flag$6 () Bool)
(declare-fun $p1$6 () Bool)
(declare-fun $start_bt_val~0.start_bt$6 () Bool)
(declare-fun $start_bt_val~0.launch_bt$6 () Bool)
(declare-fun $start_bt_val~0.reset_flag$6 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$6 () Bool)
(declare-fun $launch_bt_val~0.start_bt$6 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$6 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$6 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$6 () Bool)
(assert (and (<= 0 $sig$6) (<= $sig$6 2)))
(assert (T false $sig$5 $ignition$5 $reset_flag$5 $p1$5 $start_bt_val~0.start_bt$5 $start_bt_val~0.launch_bt$5 $start_bt_val~0.reset_flag$5 $start_bt_val~0.start_bt_out$5 $launch_bt_val~0.start_bt$5 $launch_bt_val~0.launch_bt$5 $launch_bt_val~0.reset_flag$5 $launch_bt_val~0.launch_bt_out$5 $sig$6 $ignition$6 $reset_flag$6 $p1$6 $start_bt_val~0.start_bt$6 $start_bt_val~0.launch_bt$6 $start_bt_val~0.reset_flag$6 $start_bt_val~0.start_bt_out$6 $launch_bt_val~0.start_bt$6 $launch_bt_val~0.launch_bt$6 $launch_bt_val~0.reset_flag$6 $launch_bt_val~0.launch_bt_out$6))
(declare-fun act7 () Bool)
(assert (=> act7 (not $p1$6)))
(check-sat act7)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$6)
; K = 8
(declare-fun $sig$7 () Int)
(declare-fun $ignition$7 () Bool)
(declare-fun $reset_flag$7 () Bool)
(declare-fun $p1$7 () Bool)
(declare-fun $start_bt_val~0.start_bt$7 () Bool)
(declare-fun $start_bt_val~0.launch_bt$7 () Bool)
(declare-fun $start_bt_val~0.reset_flag$7 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$7 () Bool)
(declare-fun $launch_bt_val~0.start_bt$7 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$7 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$7 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$7 () Bool)
(assert (and (<= 0 $sig$7) (<= $sig$7 2)))
(assert (T false $sig$6 $ignition$6 $reset_flag$6 $p1$6 $start_bt_val~0.start_bt$6 $start_bt_val~0.launch_bt$6 $start_bt_val~0.reset_flag$6 $start_bt_val~0.start_bt_out$6 $launch_bt_val~0.start_bt$6 $launch_bt_val~0.launch_bt$6 $launch_bt_val~0.reset_flag$6 $launch_bt_val~0.launch_bt_out$6 $sig$7 $ignition$7 $reset_flag$7 $p1$7 $start_bt_val~0.start_bt$7 $start_bt_val~0.launch_bt$7 $start_bt_val~0.reset_flag$7 $start_bt_val~0.start_bt_out$7 $launch_bt_val~0.start_bt$7 $launch_bt_val~0.launch_bt$7 $launch_bt_val~0.reset_flag$7 $launch_bt_val~0.launch_bt_out$7))
(declare-fun act8 () Bool)
(assert (=> act8 (not $p1$7)))
(check-sat act8)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$7)
; K = 9
(declare-fun $sig$8 () Int)
(declare-fun $ignition$8 () Bool)
(declare-fun $reset_flag$8 () Bool)
(declare-fun $p1$8 () Bool)
(declare-fun $start_bt_val~0.start_bt$8 () Bool)
(declare-fun $start_bt_val~0.launch_bt$8 () Bool)
(declare-fun $start_bt_val~0.reset_flag$8 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$8 () Bool)
(declare-fun $launch_bt_val~0.start_bt$8 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$8 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$8 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$8 () Bool)
(assert (and (<= 0 $sig$8) (<= $sig$8 2)))
(assert (T false $sig$7 $ignition$7 $reset_flag$7 $p1$7 $start_bt_val~0.start_bt$7 $start_bt_val~0.launch_bt$7 $start_bt_val~0.reset_flag$7 $start_bt_val~0.start_bt_out$7 $launch_bt_val~0.start_bt$7 $launch_bt_val~0.launch_bt$7 $launch_bt_val~0.reset_flag$7 $launch_bt_val~0.launch_bt_out$7 $sig$8 $ignition$8 $reset_flag$8 $p1$8 $start_bt_val~0.start_bt$8 $start_bt_val~0.launch_bt$8 $start_bt_val~0.reset_flag$8 $start_bt_val~0.start_bt_out$8 $launch_bt_val~0.start_bt$8 $launch_bt_val~0.launch_bt$8 $launch_bt_val~0.reset_flag$8 $launch_bt_val~0.launch_bt_out$8))
(declare-fun act9 () Bool)
(assert (=> act9 (not $p1$8)))
(check-sat act9)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$8)
; K = 10
(declare-fun $sig$9 () Int)
(declare-fun $ignition$9 () Bool)
(declare-fun $reset_flag$9 () Bool)
(declare-fun $p1$9 () Bool)
(declare-fun $start_bt_val~0.start_bt$9 () Bool)
(declare-fun $start_bt_val~0.launch_bt$9 () Bool)
(declare-fun $start_bt_val~0.reset_flag$9 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$9 () Bool)
(declare-fun $launch_bt_val~0.start_bt$9 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$9 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$9 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$9 () Bool)
(assert (and (<= 0 $sig$9) (<= $sig$9 2)))
(assert (T false $sig$8 $ignition$8 $reset_flag$8 $p1$8 $start_bt_val~0.start_bt$8 $start_bt_val~0.launch_bt$8 $start_bt_val~0.reset_flag$8 $start_bt_val~0.start_bt_out$8 $launch_bt_val~0.start_bt$8 $launch_bt_val~0.launch_bt$8 $launch_bt_val~0.reset_flag$8 $launch_bt_val~0.launch_bt_out$8 $sig$9 $ignition$9 $reset_flag$9 $p1$9 $start_bt_val~0.start_bt$9 $start_bt_val~0.launch_bt$9 $start_bt_val~0.reset_flag$9 $start_bt_val~0.start_bt_out$9 $launch_bt_val~0.start_bt$9 $launch_bt_val~0.launch_bt$9 $launch_bt_val~0.reset_flag$9 $launch_bt_val~0.launch_bt_out$9))
(declare-fun act10 () Bool)
(assert (=> act10 (not $p1$9)))
(check-sat act10)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$9)
; K = 11
(declare-fun $sig$10 () Int)
(declare-fun $ignition$10 () Bool)
(declare-fun $reset_flag$10 () Bool)
(declare-fun $p1$10 () Bool)
(declare-fun $start_bt_val~0.start_bt$10 () Bool)
(declare-fun $start_bt_val~0.launch_bt$10 () Bool)
(declare-fun $start_bt_val~0.reset_flag$10 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$10 () Bool)
(declare-fun $launch_bt_val~0.start_bt$10 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$10 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$10 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$10 () Bool)
(assert (and (<= 0 $sig$10) (<= $sig$10 2)))
(assert (T false $sig$9 $ignition$9 $reset_flag$9 $p1$9 $start_bt_val~0.start_bt$9 $start_bt_val~0.launch_bt$9 $start_bt_val~0.reset_flag$9 $start_bt_val~0.start_bt_out$9 $launch_bt_val~0.start_bt$9 $launch_bt_val~0.launch_bt$9 $launch_bt_val~0.reset_flag$9 $launch_bt_val~0.launch_bt_out$9 $sig$10 $ignition$10 $reset_flag$10 $p1$10 $start_bt_val~0.start_bt$10 $start_bt_val~0.launch_bt$10 $start_bt_val~0.reset_flag$10 $start_bt_val~0.start_bt_out$10 $launch_bt_val~0.start_bt$10 $launch_bt_val~0.launch_bt$10 $launch_bt_val~0.reset_flag$10 $launch_bt_val~0.launch_bt_out$10))
(declare-fun act11 () Bool)
(assert (=> act11 (not $p1$10)))
(check-sat act11)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$10)
; K = 12
(declare-fun $sig$11 () Int)
(declare-fun $ignition$11 () Bool)
(declare-fun $reset_flag$11 () Bool)
(declare-fun $p1$11 () Bool)
(declare-fun $start_bt_val~0.start_bt$11 () Bool)
(declare-fun $start_bt_val~0.launch_bt$11 () Bool)
(declare-fun $start_bt_val~0.reset_flag$11 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$11 () Bool)
(declare-fun $launch_bt_val~0.start_bt$11 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$11 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$11 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$11 () Bool)
(assert (and (<= 0 $sig$11) (<= $sig$11 2)))
(assert (T false $sig$10 $ignition$10 $reset_flag$10 $p1$10 $start_bt_val~0.start_bt$10 $start_bt_val~0.launch_bt$10 $start_bt_val~0.reset_flag$10 $start_bt_val~0.start_bt_out$10 $launch_bt_val~0.start_bt$10 $launch_bt_val~0.launch_bt$10 $launch_bt_val~0.reset_flag$10 $launch_bt_val~0.launch_bt_out$10 $sig$11 $ignition$11 $reset_flag$11 $p1$11 $start_bt_val~0.start_bt$11 $start_bt_val~0.launch_bt$11 $start_bt_val~0.reset_flag$11 $start_bt_val~0.start_bt_out$11 $launch_bt_val~0.start_bt$11 $launch_bt_val~0.launch_bt$11 $launch_bt_val~0.reset_flag$11 $launch_bt_val~0.launch_bt_out$11))
(declare-fun act12 () Bool)
(assert (=> act12 (not $p1$11)))
(check-sat act12)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$11)
; K = 13
(declare-fun $sig$12 () Int)
(declare-fun $ignition$12 () Bool)
(declare-fun $reset_flag$12 () Bool)
(declare-fun $p1$12 () Bool)
(declare-fun $start_bt_val~0.start_bt$12 () Bool)
(declare-fun $start_bt_val~0.launch_bt$12 () Bool)
(declare-fun $start_bt_val~0.reset_flag$12 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$12 () Bool)
(declare-fun $launch_bt_val~0.start_bt$12 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$12 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$12 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$12 () Bool)
(assert (and (<= 0 $sig$12) (<= $sig$12 2)))
(assert (T false $sig$11 $ignition$11 $reset_flag$11 $p1$11 $start_bt_val~0.start_bt$11 $start_bt_val~0.launch_bt$11 $start_bt_val~0.reset_flag$11 $start_bt_val~0.start_bt_out$11 $launch_bt_val~0.start_bt$11 $launch_bt_val~0.launch_bt$11 $launch_bt_val~0.reset_flag$11 $launch_bt_val~0.launch_bt_out$11 $sig$12 $ignition$12 $reset_flag$12 $p1$12 $start_bt_val~0.start_bt$12 $start_bt_val~0.launch_bt$12 $start_bt_val~0.reset_flag$12 $start_bt_val~0.start_bt_out$12 $launch_bt_val~0.start_bt$12 $launch_bt_val~0.launch_bt$12 $launch_bt_val~0.reset_flag$12 $launch_bt_val~0.launch_bt_out$12))
(declare-fun act13 () Bool)
(assert (=> act13 (not $p1$12)))
(check-sat act13)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$12)
; K = 14
(declare-fun $sig$13 () Int)
(declare-fun $ignition$13 () Bool)
(declare-fun $reset_flag$13 () Bool)
(declare-fun $p1$13 () Bool)
(declare-fun $start_bt_val~0.start_bt$13 () Bool)
(declare-fun $start_bt_val~0.launch_bt$13 () Bool)
(declare-fun $start_bt_val~0.reset_flag$13 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$13 () Bool)
(declare-fun $launch_bt_val~0.start_bt$13 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$13 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$13 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$13 () Bool)
(assert (and (<= 0 $sig$13) (<= $sig$13 2)))
(assert (T false $sig$12 $ignition$12 $reset_flag$12 $p1$12 $start_bt_val~0.start_bt$12 $start_bt_val~0.launch_bt$12 $start_bt_val~0.reset_flag$12 $start_bt_val~0.start_bt_out$12 $launch_bt_val~0.start_bt$12 $launch_bt_val~0.launch_bt$12 $launch_bt_val~0.reset_flag$12 $launch_bt_val~0.launch_bt_out$12 $sig$13 $ignition$13 $reset_flag$13 $p1$13 $start_bt_val~0.start_bt$13 $start_bt_val~0.launch_bt$13 $start_bt_val~0.reset_flag$13 $start_bt_val~0.start_bt_out$13 $launch_bt_val~0.start_bt$13 $launch_bt_val~0.launch_bt$13 $launch_bt_val~0.reset_flag$13 $launch_bt_val~0.launch_bt_out$13))
(declare-fun act14 () Bool)
(assert (=> act14 (not $p1$13)))
(check-sat act14)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$13)
; K = 15
(declare-fun $sig$14 () Int)
(declare-fun $ignition$14 () Bool)
(declare-fun $reset_flag$14 () Bool)
(declare-fun $p1$14 () Bool)
(declare-fun $start_bt_val~0.start_bt$14 () Bool)
(declare-fun $start_bt_val~0.launch_bt$14 () Bool)
(declare-fun $start_bt_val~0.reset_flag$14 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$14 () Bool)
(declare-fun $launch_bt_val~0.start_bt$14 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$14 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$14 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$14 () Bool)
(assert (and (<= 0 $sig$14) (<= $sig$14 2)))
(assert (T false $sig$13 $ignition$13 $reset_flag$13 $p1$13 $start_bt_val~0.start_bt$13 $start_bt_val~0.launch_bt$13 $start_bt_val~0.reset_flag$13 $start_bt_val~0.start_bt_out$13 $launch_bt_val~0.start_bt$13 $launch_bt_val~0.launch_bt$13 $launch_bt_val~0.reset_flag$13 $launch_bt_val~0.launch_bt_out$13 $sig$14 $ignition$14 $reset_flag$14 $p1$14 $start_bt_val~0.start_bt$14 $start_bt_val~0.launch_bt$14 $start_bt_val~0.reset_flag$14 $start_bt_val~0.start_bt_out$14 $launch_bt_val~0.start_bt$14 $launch_bt_val~0.launch_bt$14 $launch_bt_val~0.reset_flag$14 $launch_bt_val~0.launch_bt_out$14))
(declare-fun act15 () Bool)
(assert (=> act15 (not $p1$14)))
(check-sat act15)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$14)
; K = 16
(declare-fun $sig$15 () Int)
(declare-fun $ignition$15 () Bool)
(declare-fun $reset_flag$15 () Bool)
(declare-fun $p1$15 () Bool)
(declare-fun $start_bt_val~0.start_bt$15 () Bool)
(declare-fun $start_bt_val~0.launch_bt$15 () Bool)
(declare-fun $start_bt_val~0.reset_flag$15 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$15 () Bool)
(declare-fun $launch_bt_val~0.start_bt$15 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$15 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$15 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$15 () Bool)
(assert (and (<= 0 $sig$15) (<= $sig$15 2)))
(assert (T false $sig$14 $ignition$14 $reset_flag$14 $p1$14 $start_bt_val~0.start_bt$14 $start_bt_val~0.launch_bt$14 $start_bt_val~0.reset_flag$14 $start_bt_val~0.start_bt_out$14 $launch_bt_val~0.start_bt$14 $launch_bt_val~0.launch_bt$14 $launch_bt_val~0.reset_flag$14 $launch_bt_val~0.launch_bt_out$14 $sig$15 $ignition$15 $reset_flag$15 $p1$15 $start_bt_val~0.start_bt$15 $start_bt_val~0.launch_bt$15 $start_bt_val~0.reset_flag$15 $start_bt_val~0.start_bt_out$15 $launch_bt_val~0.start_bt$15 $launch_bt_val~0.launch_bt$15 $launch_bt_val~0.reset_flag$15 $launch_bt_val~0.launch_bt_out$15))
(declare-fun act16 () Bool)
(assert (=> act16 (not $p1$15)))
(check-sat act16)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$15)
; K = 17
(declare-fun $sig$16 () Int)
(declare-fun $ignition$16 () Bool)
(declare-fun $reset_flag$16 () Bool)
(declare-fun $p1$16 () Bool)
(declare-fun $start_bt_val~0.start_bt$16 () Bool)
(declare-fun $start_bt_val~0.launch_bt$16 () Bool)
(declare-fun $start_bt_val~0.reset_flag$16 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$16 () Bool)
(declare-fun $launch_bt_val~0.start_bt$16 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$16 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$16 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$16 () Bool)
(assert (and (<= 0 $sig$16) (<= $sig$16 2)))
(assert (T false $sig$15 $ignition$15 $reset_flag$15 $p1$15 $start_bt_val~0.start_bt$15 $start_bt_val~0.launch_bt$15 $start_bt_val~0.reset_flag$15 $start_bt_val~0.start_bt_out$15 $launch_bt_val~0.start_bt$15 $launch_bt_val~0.launch_bt$15 $launch_bt_val~0.reset_flag$15 $launch_bt_val~0.launch_bt_out$15 $sig$16 $ignition$16 $reset_flag$16 $p1$16 $start_bt_val~0.start_bt$16 $start_bt_val~0.launch_bt$16 $start_bt_val~0.reset_flag$16 $start_bt_val~0.start_bt_out$16 $launch_bt_val~0.start_bt$16 $launch_bt_val~0.launch_bt$16 $launch_bt_val~0.reset_flag$16 $launch_bt_val~0.launch_bt_out$16))
(declare-fun act17 () Bool)
(assert (=> act17 (not $p1$16)))
(check-sat act17)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$16)
; K = 18
(declare-fun $sig$17 () Int)
(declare-fun $ignition$17 () Bool)
(declare-fun $reset_flag$17 () Bool)
(declare-fun $p1$17 () Bool)
(declare-fun $start_bt_val~0.start_bt$17 () Bool)
(declare-fun $start_bt_val~0.launch_bt$17 () Bool)
(declare-fun $start_bt_val~0.reset_flag$17 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$17 () Bool)
(declare-fun $launch_bt_val~0.start_bt$17 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$17 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$17 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$17 () Bool)
(assert (and (<= 0 $sig$17) (<= $sig$17 2)))
(assert (T false $sig$16 $ignition$16 $reset_flag$16 $p1$16 $start_bt_val~0.start_bt$16 $start_bt_val~0.launch_bt$16 $start_bt_val~0.reset_flag$16 $start_bt_val~0.start_bt_out$16 $launch_bt_val~0.start_bt$16 $launch_bt_val~0.launch_bt$16 $launch_bt_val~0.reset_flag$16 $launch_bt_val~0.launch_bt_out$16 $sig$17 $ignition$17 $reset_flag$17 $p1$17 $start_bt_val~0.start_bt$17 $start_bt_val~0.launch_bt$17 $start_bt_val~0.reset_flag$17 $start_bt_val~0.start_bt_out$17 $launch_bt_val~0.start_bt$17 $launch_bt_val~0.launch_bt$17 $launch_bt_val~0.reset_flag$17 $launch_bt_val~0.launch_bt_out$17))
(declare-fun act18 () Bool)
(assert (=> act18 (not $p1$17)))
(check-sat act18)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$17)
; K = 19
(declare-fun $sig$18 () Int)
(declare-fun $ignition$18 () Bool)
(declare-fun $reset_flag$18 () Bool)
(declare-fun $p1$18 () Bool)
(declare-fun $start_bt_val~0.start_bt$18 () Bool)
(declare-fun $start_bt_val~0.launch_bt$18 () Bool)
(declare-fun $start_bt_val~0.reset_flag$18 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$18 () Bool)
(declare-fun $launch_bt_val~0.start_bt$18 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$18 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$18 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$18 () Bool)
(assert (and (<= 0 $sig$18) (<= $sig$18 2)))
(assert (T false $sig$17 $ignition$17 $reset_flag$17 $p1$17 $start_bt_val~0.start_bt$17 $start_bt_val~0.launch_bt$17 $start_bt_val~0.reset_flag$17 $start_bt_val~0.start_bt_out$17 $launch_bt_val~0.start_bt$17 $launch_bt_val~0.launch_bt$17 $launch_bt_val~0.reset_flag$17 $launch_bt_val~0.launch_bt_out$17 $sig$18 $ignition$18 $reset_flag$18 $p1$18 $start_bt_val~0.start_bt$18 $start_bt_val~0.launch_bt$18 $start_bt_val~0.reset_flag$18 $start_bt_val~0.start_bt_out$18 $launch_bt_val~0.start_bt$18 $launch_bt_val~0.launch_bt$18 $launch_bt_val~0.reset_flag$18 $launch_bt_val~0.launch_bt_out$18))
(declare-fun act19 () Bool)
(assert (=> act19 (not $p1$18)))
(check-sat act19)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$18)
; K = 20
(declare-fun $sig$19 () Int)
(declare-fun $ignition$19 () Bool)
(declare-fun $reset_flag$19 () Bool)
(declare-fun $p1$19 () Bool)
(declare-fun $start_bt_val~0.start_bt$19 () Bool)
(declare-fun $start_bt_val~0.launch_bt$19 () Bool)
(declare-fun $start_bt_val~0.reset_flag$19 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$19 () Bool)
(declare-fun $launch_bt_val~0.start_bt$19 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$19 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$19 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$19 () Bool)
(assert (and (<= 0 $sig$19) (<= $sig$19 2)))
(assert (T false $sig$18 $ignition$18 $reset_flag$18 $p1$18 $start_bt_val~0.start_bt$18 $start_bt_val~0.launch_bt$18 $start_bt_val~0.reset_flag$18 $start_bt_val~0.start_bt_out$18 $launch_bt_val~0.start_bt$18 $launch_bt_val~0.launch_bt$18 $launch_bt_val~0.reset_flag$18 $launch_bt_val~0.launch_bt_out$18 $sig$19 $ignition$19 $reset_flag$19 $p1$19 $start_bt_val~0.start_bt$19 $start_bt_val~0.launch_bt$19 $start_bt_val~0.reset_flag$19 $start_bt_val~0.start_bt_out$19 $launch_bt_val~0.start_bt$19 $launch_bt_val~0.launch_bt$19 $launch_bt_val~0.reset_flag$19 $launch_bt_val~0.launch_bt_out$19))
(declare-fun act20 () Bool)
(assert (=> act20 (not $p1$19)))
(check-sat act20)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$19)
; K = 21
(declare-fun $sig$20 () Int)
(declare-fun $ignition$20 () Bool)
(declare-fun $reset_flag$20 () Bool)
(declare-fun $p1$20 () Bool)
(declare-fun $start_bt_val~0.start_bt$20 () Bool)
(declare-fun $start_bt_val~0.launch_bt$20 () Bool)
(declare-fun $start_bt_val~0.reset_flag$20 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$20 () Bool)
(declare-fun $launch_bt_val~0.start_bt$20 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$20 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$20 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$20 () Bool)
(assert (and (<= 0 $sig$20) (<= $sig$20 2)))
(assert (T false $sig$19 $ignition$19 $reset_flag$19 $p1$19 $start_bt_val~0.start_bt$19 $start_bt_val~0.launch_bt$19 $start_bt_val~0.reset_flag$19 $start_bt_val~0.start_bt_out$19 $launch_bt_val~0.start_bt$19 $launch_bt_val~0.launch_bt$19 $launch_bt_val~0.reset_flag$19 $launch_bt_val~0.launch_bt_out$19 $sig$20 $ignition$20 $reset_flag$20 $p1$20 $start_bt_val~0.start_bt$20 $start_bt_val~0.launch_bt$20 $start_bt_val~0.reset_flag$20 $start_bt_val~0.start_bt_out$20 $launch_bt_val~0.start_bt$20 $launch_bt_val~0.launch_bt$20 $launch_bt_val~0.reset_flag$20 $launch_bt_val~0.launch_bt_out$20))
(declare-fun act21 () Bool)
(assert (=> act21 (not $p1$20)))
(check-sat act21)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$20)
; K = 22
(declare-fun $sig$21 () Int)
(declare-fun $ignition$21 () Bool)
(declare-fun $reset_flag$21 () Bool)
(declare-fun $p1$21 () Bool)
(declare-fun $start_bt_val~0.start_bt$21 () Bool)
(declare-fun $start_bt_val~0.launch_bt$21 () Bool)
(declare-fun $start_bt_val~0.reset_flag$21 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$21 () Bool)
(declare-fun $launch_bt_val~0.start_bt$21 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$21 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$21 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$21 () Bool)
(assert (and (<= 0 $sig$21) (<= $sig$21 2)))
(assert (T false $sig$20 $ignition$20 $reset_flag$20 $p1$20 $start_bt_val~0.start_bt$20 $start_bt_val~0.launch_bt$20 $start_bt_val~0.reset_flag$20 $start_bt_val~0.start_bt_out$20 $launch_bt_val~0.start_bt$20 $launch_bt_val~0.launch_bt$20 $launch_bt_val~0.reset_flag$20 $launch_bt_val~0.launch_bt_out$20 $sig$21 $ignition$21 $reset_flag$21 $p1$21 $start_bt_val~0.start_bt$21 $start_bt_val~0.launch_bt$21 $start_bt_val~0.reset_flag$21 $start_bt_val~0.start_bt_out$21 $launch_bt_val~0.start_bt$21 $launch_bt_val~0.launch_bt$21 $launch_bt_val~0.reset_flag$21 $launch_bt_val~0.launch_bt_out$21))
(declare-fun act22 () Bool)
(assert (=> act22 (not $p1$21)))
(check-sat act22)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$21)
; K = 23
(declare-fun $sig$22 () Int)
(declare-fun $ignition$22 () Bool)
(declare-fun $reset_flag$22 () Bool)
(declare-fun $p1$22 () Bool)
(declare-fun $start_bt_val~0.start_bt$22 () Bool)
(declare-fun $start_bt_val~0.launch_bt$22 () Bool)
(declare-fun $start_bt_val~0.reset_flag$22 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$22 () Bool)
(declare-fun $launch_bt_val~0.start_bt$22 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$22 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$22 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$22 () Bool)
(assert (and (<= 0 $sig$22) (<= $sig$22 2)))
(assert (T false $sig$21 $ignition$21 $reset_flag$21 $p1$21 $start_bt_val~0.start_bt$21 $start_bt_val~0.launch_bt$21 $start_bt_val~0.reset_flag$21 $start_bt_val~0.start_bt_out$21 $launch_bt_val~0.start_bt$21 $launch_bt_val~0.launch_bt$21 $launch_bt_val~0.reset_flag$21 $launch_bt_val~0.launch_bt_out$21 $sig$22 $ignition$22 $reset_flag$22 $p1$22 $start_bt_val~0.start_bt$22 $start_bt_val~0.launch_bt$22 $start_bt_val~0.reset_flag$22 $start_bt_val~0.start_bt_out$22 $launch_bt_val~0.start_bt$22 $launch_bt_val~0.launch_bt$22 $launch_bt_val~0.reset_flag$22 $launch_bt_val~0.launch_bt_out$22))
(declare-fun act23 () Bool)
(assert (=> act23 (not $p1$22)))
(check-sat act23)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$22)
; K = 24
(declare-fun $sig$23 () Int)
(declare-fun $ignition$23 () Bool)
(declare-fun $reset_flag$23 () Bool)
(declare-fun $p1$23 () Bool)
(declare-fun $start_bt_val~0.start_bt$23 () Bool)
(declare-fun $start_bt_val~0.launch_bt$23 () Bool)
(declare-fun $start_bt_val~0.reset_flag$23 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$23 () Bool)
(declare-fun $launch_bt_val~0.start_bt$23 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$23 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$23 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$23 () Bool)
(assert (and (<= 0 $sig$23) (<= $sig$23 2)))
(assert (T false $sig$22 $ignition$22 $reset_flag$22 $p1$22 $start_bt_val~0.start_bt$22 $start_bt_val~0.launch_bt$22 $start_bt_val~0.reset_flag$22 $start_bt_val~0.start_bt_out$22 $launch_bt_val~0.start_bt$22 $launch_bt_val~0.launch_bt$22 $launch_bt_val~0.reset_flag$22 $launch_bt_val~0.launch_bt_out$22 $sig$23 $ignition$23 $reset_flag$23 $p1$23 $start_bt_val~0.start_bt$23 $start_bt_val~0.launch_bt$23 $start_bt_val~0.reset_flag$23 $start_bt_val~0.start_bt_out$23 $launch_bt_val~0.start_bt$23 $launch_bt_val~0.launch_bt$23 $launch_bt_val~0.reset_flag$23 $launch_bt_val~0.launch_bt_out$23))
(declare-fun act24 () Bool)
(assert (=> act24 (not $p1$23)))
(check-sat act24)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$23)
; K = 25
(declare-fun $sig$24 () Int)
(declare-fun $ignition$24 () Bool)
(declare-fun $reset_flag$24 () Bool)
(declare-fun $p1$24 () Bool)
(declare-fun $start_bt_val~0.start_bt$24 () Bool)
(declare-fun $start_bt_val~0.launch_bt$24 () Bool)
(declare-fun $start_bt_val~0.reset_flag$24 () Bool)
(declare-fun $start_bt_val~0.start_bt_out$24 () Bool)
(declare-fun $launch_bt_val~0.start_bt$24 () Bool)
(declare-fun $launch_bt_val~0.launch_bt$24 () Bool)
(declare-fun $launch_bt_val~0.reset_flag$24 () Bool)
(declare-fun $launch_bt_val~0.launch_bt_out$24 () Bool)
(assert (and (<= 0 $sig$24) (<= $sig$24 2)))
(assert (T false $sig$23 $ignition$23 $reset_flag$23 $p1$23 $start_bt_val~0.start_bt$23 $start_bt_val~0.launch_bt$23 $start_bt_val~0.reset_flag$23 $start_bt_val~0.start_bt_out$23 $launch_bt_val~0.start_bt$23 $launch_bt_val~0.launch_bt$23 $launch_bt_val~0.reset_flag$23 $launch_bt_val~0.launch_bt_out$23 $sig$24 $ignition$24 $reset_flag$24 $p1$24 $start_bt_val~0.start_bt$24 $start_bt_val~0.launch_bt$24 $start_bt_val~0.reset_flag$24 $start_bt_val~0.start_bt_out$24 $launch_bt_val~0.start_bt$24 $launch_bt_val~0.launch_bt$24 $launch_bt_val~0.reset_flag$24 $launch_bt_val~0.launch_bt_out$24))
(declare-fun act25 () Bool)
(assert (=> act25 (not $p1$24)))
(check-sat act25)
(echo "@DONE")
; Z3: unsat
; Z3: @DONE
(assert $p1$24)
; K = 26
